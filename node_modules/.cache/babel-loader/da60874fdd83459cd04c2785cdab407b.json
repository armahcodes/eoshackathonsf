{"ast":null,"code":"import _classCallCheck from \"/Users/Master/Desktop/paper-dashboard-react/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/Master/Desktop/paper-dashboard-react/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/Master/Desktop/paper-dashboard-react/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/Master/Desktop/paper-dashboard-react/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/Master/Desktop/paper-dashboard-react/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"/Users/Master/Desktop/paper-dashboard-react/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"/Users/Master/Desktop/paper-dashboard-react/src/components/Header/Header.jsx\";\nimport React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { Collapse, Navbar, NavbarToggler, NavbarBrand, Nav, NavItem, Dropdown, DropdownToggle, DropdownMenu, DropdownItem, Container, InputGroup, InputGroupText, InputGroupAddon, Input } from \"reactstrap\";\nimport dashboardRoutes from \"routes/dashboard.jsx\";\n\nvar Header =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(Header, _React$Component);\n\n  function Header(props) {\n    var _this;\n\n    _classCallCheck(this, Header);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Header).call(this, props));\n    _this.state = {\n      isOpen: false,\n      dropdownOpen: false,\n      color: \"transparent\"\n    };\n    _this.toggle = _this.toggle.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.dropdownToggle = _this.dropdownToggle.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  }\n\n  _createClass(Header, [{\n    key: \"toggle\",\n    value: function toggle() {\n      if (this.state.isOpen) {\n        this.setState({\n          color: \"transparent\"\n        });\n      } else {\n        this.setState({\n          color: \"dark\"\n        });\n      }\n\n      this.setState({\n        isOpen: !this.state.isOpen\n      });\n    }\n  }, {\n    key: \"dropdownToggle\",\n    value: function dropdownToggle(e) {\n      this.setState({\n        dropdownOpen: !this.state.dropdownOpen\n      });\n    }\n  }, {\n    key: \"getBrand\",\n    value: function getBrand() {\n      var _this2 = this;\n\n      var name;\n      dashboardRoutes.map(function (prop, key) {\n        if (prop.collapse) {\n          prop.views.map(function (prop, key) {\n            if (prop.path === _this2.props.location.pathname) {\n              name = prop.name;\n            }\n\n            return null;\n          });\n        } else {\n          if (prop.redirect) {\n            if (prop.path === _this2.props.location.pathname) {\n              name = prop.name;\n            }\n          } else {\n            if (prop.path === _this2.props.location.pathname) {\n              name = prop.name;\n            }\n          }\n        }\n\n        return null;\n      });\n      return name;\n    }\n  }, {\n    key: \"openSidebar\",\n    value: function openSidebar() {\n      document.documentElement.classList.toggle(\"nav-open\");\n      this.refs.sidebarToggle.classList.toggle(\"toggled\");\n    } // function that adds color dark/transparent to the navbar on resize (this is for the collapse)\n\n  }, {\n    key: \"updateColor\",\n    value: function updateColor() {\n      if (window.innerWidth < 993 && this.state.isOpen) {\n        this.setState({\n          color: \"dark\"\n        });\n      } else {\n        this.setState({\n          color: \"transparent\"\n        });\n      }\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      window.addEventListener(\"resize\", this.updateColor.bind(this));\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate(e) {\n      if (window.innerWidth < 993 && e.history.location.pathname !== e.location.pathname && document.documentElement.className.indexOf(\"nav-open\") !== -1) {\n        document.documentElement.classList.toggle(\"nav-open\");\n        this.refs.sidebarToggle.classList.toggle(\"toggled\");\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this3 = this;\n\n      return (// add or remove classes depending if we are on full-screen-maps page or not\n        React.createElement(Navbar, {\n          color: this.props.location.pathname.indexOf(\"full-screen-maps\") !== -1 ? \"dark\" : this.state.color,\n          expand: \"lg\",\n          className: this.props.location.pathname.indexOf(\"full-screen-maps\") !== -1 ? \"navbar-absolute fixed-top\" : \"navbar-absolute fixed-top \" + (this.state.color === \"transparent\" ? \"navbar-transparent \" : \"\"),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 110\n          },\n          __self: this\n        }, React.createElement(Container, {\n          fluid: true,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 124\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          className: \"navbar-wrapper\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 125\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          className: \"navbar-toggle\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 126\n          },\n          __self: this\n        }, React.createElement(\"button\", {\n          type: \"button\",\n          ref: \"sidebarToggle\",\n          className: \"navbar-toggler\",\n          onClick: function onClick() {\n            return _this3.openSidebar();\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 127\n          },\n          __self: this\n        }, React.createElement(\"span\", {\n          className: \"navbar-toggler-bar bar1\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 133\n          },\n          __self: this\n        }), React.createElement(\"span\", {\n          className: \"navbar-toggler-bar bar2\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 134\n          },\n          __self: this\n        }), React.createElement(\"span\", {\n          className: \"navbar-toggler-bar bar3\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 135\n          },\n          __self: this\n        }))), React.createElement(NavbarBrand, {\n          href: \"/\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 138\n          },\n          __self: this\n        }, this.getBrand())), React.createElement(NavbarToggler, {\n          onClick: this.toggle,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 140\n          },\n          __self: this\n        }, React.createElement(\"span\", {\n          className: \"navbar-toggler-bar navbar-kebab\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 141\n          },\n          __self: this\n        }), React.createElement(\"span\", {\n          className: \"navbar-toggler-bar navbar-kebab\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 142\n          },\n          __self: this\n        }), React.createElement(\"span\", {\n          className: \"navbar-toggler-bar navbar-kebab\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 143\n          },\n          __self: this\n        }))))\n      );\n    }\n  }]);\n\n  return Header;\n}(React.Component);\n\nexport default Header;","map":{"version":3,"sources":["/Users/Master/Desktop/paper-dashboard-react/src/components/Header/Header.jsx"],"names":["React","Link","Collapse","Navbar","NavbarToggler","NavbarBrand","Nav","NavItem","Dropdown","DropdownToggle","DropdownMenu","DropdownItem","Container","InputGroup","InputGroupText","InputGroupAddon","Input","dashboardRoutes","Header","props","state","isOpen","dropdownOpen","color","toggle","bind","dropdownToggle","setState","e","name","map","prop","key","collapse","views","path","location","pathname","redirect","document","documentElement","classList","refs","sidebarToggle","window","innerWidth","addEventListener","updateColor","history","className","indexOf","openSidebar","getBrand","Component"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport {\n  Collapse,\n  Navbar,\n  NavbarToggler,\n  NavbarBrand,\n  Nav,\n  NavItem,\n  Dropdown,\n  DropdownToggle,\n  DropdownMenu,\n  DropdownItem,\n  Container,\n  InputGroup,\n  InputGroupText,\n  InputGroupAddon,\n  Input\n} from \"reactstrap\";\n\nimport dashboardRoutes from \"routes/dashboard.jsx\";\n\nclass Header extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isOpen: false,\n      dropdownOpen: false,\n      color: \"transparent\"\n    };\n    this.toggle = this.toggle.bind(this);\n    this.dropdownToggle = this.dropdownToggle.bind(this);\n  }\n  toggle() {\n    if (this.state.isOpen) {\n      this.setState({\n        color: \"transparent\"\n      });\n    } else {\n      this.setState({\n        color: \"dark\"\n      });\n    }\n    this.setState({\n      isOpen: !this.state.isOpen\n    });\n  }\n  dropdownToggle(e) {\n    this.setState({\n      dropdownOpen: !this.state.dropdownOpen\n    });\n  }\n  getBrand() {\n    var name;\n    dashboardRoutes.map((prop, key) => {\n      if (prop.collapse) {\n        prop.views.map((prop, key) => {\n          if (prop.path === this.props.location.pathname) {\n            name = prop.name;\n          }\n          return null;\n        });\n      } else {\n        if (prop.redirect) {\n          if (prop.path === this.props.location.pathname) {\n            name = prop.name;\n          }\n        } else {\n          if (prop.path === this.props.location.pathname) {\n            name = prop.name;\n          }\n        }\n      }\n      return null;\n    });\n    return name;\n  }\n  openSidebar() {\n    document.documentElement.classList.toggle(\"nav-open\");\n    this.refs.sidebarToggle.classList.toggle(\"toggled\");\n  }\n  // function that adds color dark/transparent to the navbar on resize (this is for the collapse)\n  updateColor() {\n    if (window.innerWidth < 993 && this.state.isOpen) {\n      this.setState({\n        color: \"dark\"\n      });\n    } else {\n      this.setState({\n        color: \"transparent\"\n      });\n    }\n  }\n  componentDidMount() {\n    window.addEventListener(\"resize\", this.updateColor.bind(this));\n  }\n  componentDidUpdate(e) {\n    if (\n      window.innerWidth < 993 &&\n      e.history.location.pathname !== e.location.pathname &&\n      document.documentElement.className.indexOf(\"nav-open\") !== -1\n    ) {\n      document.documentElement.classList.toggle(\"nav-open\");\n      this.refs.sidebarToggle.classList.toggle(\"toggled\");\n    }\n  }\n  render() {\n    return (\n      // add or remove classes depending if we are on full-screen-maps page or not\n      <Navbar\n        color={\n          this.props.location.pathname.indexOf(\"full-screen-maps\") !== -1\n            ? \"dark\"\n            : this.state.color\n        }\n        expand=\"lg\"\n        className={\n          this.props.location.pathname.indexOf(\"full-screen-maps\") !== -1\n            ? \"navbar-absolute fixed-top\"\n            : \"navbar-absolute fixed-top \" +\n              (this.state.color === \"transparent\" ? \"navbar-transparent \" : \"\")\n        }\n      >\n        <Container fluid>\n          <div className=\"navbar-wrapper\">\n            <div className=\"navbar-toggle\">\n              <button\n                type=\"button\"\n                ref=\"sidebarToggle\"\n                className=\"navbar-toggler\"\n                onClick={() => this.openSidebar()}\n              >\n                <span className=\"navbar-toggler-bar bar1\" />\n                <span className=\"navbar-toggler-bar bar2\" />\n                <span className=\"navbar-toggler-bar bar3\" />\n              </button>\n            </div>\n            <NavbarBrand href=\"/\">{this.getBrand()}</NavbarBrand>\n          </div>\n          <NavbarToggler onClick={this.toggle}>\n            <span className=\"navbar-toggler-bar navbar-kebab\" />\n            <span className=\"navbar-toggler-bar navbar-kebab\" />\n            <span className=\"navbar-toggler-bar navbar-kebab\" />\n          </NavbarToggler>\n        </Container>\n      </Navbar>\n    );\n  }\n}\n\nexport default Header;\n"]},"metadata":{},"sourceType":"module"}